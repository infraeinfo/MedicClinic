/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package guias;

import conexão.ConectaBanco;
import static guias.DetalhesConsultaPaciente.AreaSintomasStatus;
//import static guias.DetalhesConsultaPaciente.dataConsulta;
//import static guias.DetalhesConsultaPaciente.txtHoraAtendimentoStatus;
import static guias.Principal.lbOperador;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Jhonatan
 */
public class Status extends javax.swing.JInternalFrame {

    /**
     * Creates new form Status
     */
    public Status() {
        initComponents();
        dtm = (DefaultTableModel) tabelaBuscaStatus.getModel();
    }
    //Sempre necessario para manipular tabelas com registros criar uma default table nome
    // não esquecer de inicar as tabelas no construtro da classe.
    public DefaultTableModel dtm;

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        txtBuscaStatus = new javax.swing.JTextField();
        btnBuscarPacientes = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tabelaBuscaStatus = new javax.swing.JTable();
        btnFecharJanela = new javax.swing.JButton();
        btnDetalhePacientes = new javax.swing.JButton();

        setClosable(true);
        setIconifiable(true);
        setTitle("Status   - Sala de Espera");
        setToolTipText("");
        addInternalFrameListener(new javax.swing.event.InternalFrameListener() {
            public void internalFrameActivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameClosed(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameClosing(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeactivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeiconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameIconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameOpened(javax.swing.event.InternalFrameEvent evt) {
                formInternalFrameOpened(evt);
            }
        });

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED, new java.awt.Color(0, 153, 153), new java.awt.Color(0, 153, 153), new java.awt.Color(0, 153, 153), new java.awt.Color(0, 153, 153)));

        jLabel1.setText("Pacientes:");

        txtBuscaStatus.setBackground(new java.awt.Color(204, 255, 255));
        txtBuscaStatus.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        txtBuscaStatus.setForeground(new java.awt.Color(0, 0, 153));

        btnBuscarPacientes.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icones/1411783471_icon-ios7-search-strong-16.png"))); // NOI18N
        btnBuscarPacientes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarPacientesActionPerformed(evt);
            }
        });

        tabelaBuscaStatus.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "PACIENTES", "MEDICOS", "HORARIO", "TRIAGEM"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tabelaBuscaStatus);
        if (tabelaBuscaStatus.getColumnModel().getColumnCount() > 0) {
            tabelaBuscaStatus.getColumnModel().getColumn(0).setPreferredWidth(200);
            tabelaBuscaStatus.getColumnModel().getColumn(1).setPreferredWidth(50);
            tabelaBuscaStatus.getColumnModel().getColumn(2).setPreferredWidth(10);
            tabelaBuscaStatus.getColumnModel().getColumn(3).setResizable(false);
            tabelaBuscaStatus.getColumnModel().getColumn(3).setPreferredWidth(10);
        }

        btnFecharJanela.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icones/1411838523_icon-close-round-16.png"))); // NOI18N
        btnFecharJanela.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFecharJanelaActionPerformed(evt);
            }
        });

        btnDetalhePacientes.setText("Detalhes Paciente");
        btnDetalhePacientes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDetalhePacientesActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jScrollPane1)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtBuscaStatus, javax.swing.GroupLayout.PREFERRED_SIZE, 556, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnBuscarPacientes)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(256, 256, 256)
                .addComponent(btnFecharJanela, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnDetalhePacientes)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txtBuscaStatus, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnBuscarPacientes))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 353, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnFecharJanela)
                    .addComponent(btnDetalhePacientes))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnFecharJanelaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFecharJanelaActionPerformed
        this.dispose();
    }//GEN-LAST:event_btnFecharJanelaActionPerformed

    private void btnBuscarPacientesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarPacientesActionPerformed

        dtm.setRowCount(0);
        Connection con;
        try {
            con = ConectaBanco.conecta("bdclinica");
//            String sql = "select p.Nome, m.nome from paciente p, medico m, consulta c Where c.medico_cod = m.cod and c.paciente_cod = p.cod and p.Nome LIKE ?";
//            String sql = "SELECT * FROM paciente,medico,consulta where consulta.paciente_cod = paciente.cod and consulta.medico_cod=medico.cod LIKE ?";
//            String sql ="SELECT * FROM paciente INNER JOIN consulta ON consulta.paciente_cod=paciente.cod"; //"SELECT * FROM paciente,medico,consulta where consulta.paciente_cod = paciente.cod and consulta.medico_cod = medico.cod LIKE ?";
            String sql = "select p.Nome, m.nome, c.horario, c.tipo_consulta from paciente p, medico m, consulta c Where c.medico_cod = m.cod and c.paciente_cod = p.cod and p.Nome LIKE ?  ";
            PreparedStatement pst = con.prepareStatement(sql);
            pst.setString(1, txtBuscaStatus.getText() + "%");

            ResultSet rs = pst.executeQuery();
            while (rs.next()) {
                //Os nome dos Objetos rs.getStrin("")= são iguais as tabelaas criadas
                Object Linha[] = {rs.getString("p.Nome"), rs.getString("m.nome"), //false, false};
                    rs.getString("c.horario"), rs.getString("c.tipo_consulta"), false, false};
                dtm.addRow(Linha);
            }

        } catch (SQLException e) {
            JOptionPane.showMessageDialog(null, "Erro :" + e.getMessage());
        }
    }//GEN-LAST:event_btnBuscarPacientesActionPerformed

    private void btnDetalhePacientesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDetalhePacientesActionPerformed
        String nome, cod;
        funcoes.funcao.detalhes_paciente_Status();
        int linha_selecionada = tabelaBuscaStatus.getSelectedRow();
        DetalhesConsultaPaciente.txtNomePacienteStatus.setText(tabelaBuscaStatus.getValueAt(linha_selecionada, 0).toString());
        nome = tabelaBuscaStatus.getValueAt(linha_selecionada, 0).toString();
        Connection con;
        try {
            con = ConectaBanco.conecta("bdclinica");
            String sql = "select p.nome, c.horario,c.tipo_consulta,c.sintomas,c.data_consulta from paciente p , consulta c where c.paciente_cod=p.cod and p.nome LIKE ?";
            PreparedStatement pst = con.prepareStatement(sql);
            pst.setString(1, DetalhesConsultaPaciente.txtNomePacienteStatus.getText() + "%");

            ResultSet rs = pst.executeQuery();
            while (rs.next()) {
                AreaSintomasStatus.setText(rs.getString("c.sintomas"));
                DetalhesConsultaPaciente.lbTipoConsulta.setText(rs.getString("c.tipo_consulta"));
            }

        } catch (SQLException e) {
            JOptionPane.showMessageDialog(null, "Erro :" + e.getMessage());
        }


    }//GEN-LAST:event_btnDetalhePacientesActionPerformed

    private void formInternalFrameOpened(javax.swing.event.InternalFrameEvent evt) {//GEN-FIRST:event_formInternalFrameOpened
        dtm.setRowCount(0);
        Connection con;
        try {
            con = ConectaBanco.conecta("bdclinica");
            String sql = "select p.Nome, m.nome, c.horario, c.tipo_consulta from paciente p, medico m, consulta c Where c.medico_cod = m.cod and c.paciente_cod = p.cod and p.Nome LIKE ?  ";
            PreparedStatement pst = con.prepareStatement(sql);
            pst.setString(1, txtBuscaStatus.getText() + "%");

            ResultSet rs = pst.executeQuery();
            while (rs.next()) {
                //Os nome dos Objetos rs.getStrin("")= são iguais as tabelaas criadas
                Object Linha[] = {rs.getString("p.Nome"), rs.getString("m.nome"), //false, false};
                    rs.getString("c.horario"), rs.getString("c.tipo_consulta"), false, false};
                dtm.addRow(Linha);
            }

        } catch (SQLException e) {
            JOptionPane.showMessageDialog(null, "Erro :" + e.getMessage());
        }
    }//GEN-LAST:event_formInternalFrameOpened


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBuscarPacientes;
    private javax.swing.JButton btnDetalhePacientes;
    private javax.swing.JButton btnFecharJanela;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tabelaBuscaStatus;
    private javax.swing.JTextField txtBuscaStatus;
    // End of variables declaration//GEN-END:variables
}
